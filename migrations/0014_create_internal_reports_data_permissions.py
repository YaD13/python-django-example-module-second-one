# Generated by Django 2.1.2 on 2019-10-24 09:14

from django.db import migrations

from toolbox.constants import (
    DATA_INTERNAL_REPORTS_DOWNLOAD,
    DATA_INTERNAL_REPORTS_VIEW,
    DATA_INTERNAL_REPORTS_GENERATE_ACTIVE_USERS_LIST,
    DATA_INTERNAL_REPORTS_GENERATE_GOALS,
    DATA_INTERNAL_REPORTS_GENERATE_INVALID_QUARTER_DATA,
    DATA_INTERNAL_REPORTS_GENERATE_USERS_RISK_SCORE_LIST,
    DATA_INTERNAL_REPORTS_LIST,
    DATA_INTERNAL_REPORTS_STATUSES,
    DATA_INTERNAL_REPORTS_TYPES,
)


def create_data_permissions(apps, schema_editor):
    data_permission = apps.get_model("toolbox", "DataPermission")

    data_permission.objects.update_or_create(
        code=DATA_INTERNAL_REPORTS_DOWNLOAD,
        defaults=dict(
            name='Internal reports download',
            endpoint='/internal-reports/download/',
            method='GET',
            query_fields=[
                'report_id',
                'file_format',
            ]
        )
    )

    data_permission.objects.update_or_create(
        code=DATA_INTERNAL_REPORTS_VIEW,
        defaults=dict(
            name='Internal reports view',
            endpoint='/internal-reports/view/',
            method='GET',
            query_fields=[
                'report_id',
            ]
        )
    )

    data_permission.objects.update_or_create(
        code=DATA_INTERNAL_REPORTS_GENERATE_ACTIVE_USERS_LIST,
        defaults=dict(
            name='Internal reports generate active users list',
            endpoint='/internal-reports/generate/active-users-list/',
            method='GET',
            query_fields=[
                'start_date',
                'end_date',
                'consecutive_days',
                'amount_to_validate',
            ]
        )
    )

    data_permission.objects.update_or_create(
        code=DATA_INTERNAL_REPORTS_GENERATE_GOALS,
        defaults=dict(
            name='Internal reports generate goals',
            endpoint='/internal-reports/generate/goals/',
            method='GET',
            query_fields=[
            ]
        )
    )

    data_permission.objects.update_or_create(
        code=DATA_INTERNAL_REPORTS_GENERATE_INVALID_QUARTER_DATA,
        defaults=dict(
            name='Internal reports generate invalid quarter data',
            endpoint='/internal-reports/generate/invalid-quarter-data/',
            method='GET',
            query_fields=[
                'end_date',
            ]
        )
    )

    data_permission.objects.update_or_create(
        code=DATA_INTERNAL_REPORTS_GENERATE_USERS_RISK_SCORE_LIST,
        defaults=dict(
            name='Internal reports generate users risk score list',
            endpoint='/internal-reports/generate/users-risk-score-list/',
            method='GET',
            query_fields=[
                'desired_risk_score',
            ]
        )
    )

    data_permission.objects.update_or_create(
        code=DATA_INTERNAL_REPORTS_LIST,
        defaults=dict(
            name='Internal reports list',
            endpoint='/internal-reports/list/',
            method='GET',
            query_fields=[
                'start_date',
                'end_date',
                'type',
                'status',
            ]
        )
    )

    data_permission.objects.update_or_create(
        code=DATA_INTERNAL_REPORTS_STATUSES,
        defaults=dict(
            name='Internal reports statuses',
            endpoint='/internal-reports/statuses/',
            method='GET',
            query_fields=[
            ]
        )
    )

    data_permission.objects.update_or_create(
        code=DATA_INTERNAL_REPORTS_TYPES,
        defaults=dict(
            name='Internal reports types',
            endpoint='/internal-reports/types/',
            method='GET',
            query_fields=[
            ]
        )
    )


class Migration(migrations.Migration):

    dependencies = [
        ('toolbox', '0013_auto_20191024_0914'),
    ]

    operations = [
        migrations.RunPython(
            create_data_permissions, migrations.RunPython.noop
        )
    ]
